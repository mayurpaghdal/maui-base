<?xml version="1.0" encoding="utf-8" ?>
<local:BaseContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                       xmlns:vm="clr-namespace:MauiBase.ViewModels"
                       xmlns:xct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
                       xmlns:me="http://schemas.maui-extended.com/extenders"
                       xmlns:common="clr-namespace:MauiBase.Common"
                       xmlns:local="clr-namespace:MauiBase.Views"
                       xmlns:m="clr-namespace:MauiBase.Models"
                       xmlns:controls="clr-namespace:MauiBase.Controls"
                       x:TypeArguments="vm:MainPageViewModel"
                       Title="This is world"
                       x:Class="MauiBase.Views.MainPage"
                       x:DataType="vm:MainPageViewModel"
                       x:Name="mainRoot">
    <!--xmlns:xe="clr-namespace:MauiBase.Effects"-->
    <Grid RowDefinitions="Auto, *, Auto" RowSpacing="0">

        <controls:TitleBar ShowBackButton="False"/>

        <!--- CONTENT PRESENTER -->
        <Grid Grid.Row="1"
              BackgroundColor="{AppThemeBinding Dark={StaticResource Black}, Light={StaticResource White}}"
              me:CornerRadiusEffect.CornerRadius="16,16,0,0">
            <controls:ChildPageControl Margin="0"
                                       x:Name="presenter"
                                       ChildViewName="{Binding CurrChildViewName, Mode=TwoWay}"
                                       ChildViewTitle="{Binding CurrChildViewBase.Title}"
                                       CurrentViewBase="{Binding CurrChildViewBase, Mode=TwoWay}"
                                       NavigationParameters="{Binding Parameters}" />
        </Grid>

        <!--MAIN MENU DRAWER-->
        <controls:PopupView Grid.RowSpan="2" 
                            ShowPopup="{Binding ShowMenuPopup, Mode=TwoWay}"
                            ContentBackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorSecondaryDark}, Light={StaticResource BackgroundColorSecondaryLight}}">
            <StackLayout Spacing="0">
                <StackLayout Padding="16,6,16,0"
                             Spacing="0"
                             HorizontalOptions="FillAndExpand">
                    <BoxView WidthRequest="36"
                             HeightRequest="6"
                             CornerRadius="3"
                             BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorTertiaryDark}, Light={StaticResource BackgroundColorTertiaryLight}}"
                             HorizontalOptions="CenterAndExpand"/>
                </StackLayout>
                <StackLayout Padding="16,16,16,16"
                             HorizontalOptions="FillAndExpand"
                             VerticalOptions="End"
                             Spacing="0">

                    <!--List of Actions for selected item-->
                    <FlexLayout Wrap="Wrap"
                                JustifyContent="SpaceAround" 
                                VerticalOptions="EndAndExpand"
                                BindableLayout.ItemsSource="{Binding BottomActionsLevel2}">
                        <FlexLayout.Resources>
                            <Style TargetType="Label">
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="HorizontalOptions" Value="Center" />
                                <Setter Property="HorizontalTextAlignment" Value="Center" />
                                <Setter Property="VerticalOptions" Value="Center" />
                                <Setter Property="VerticalTextAlignment" Value="Center" />
                                <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource TextColorSecondaryDark}, Light={StaticResource TextColorSecondaryLight}}" />
                            </Style>

                            <Style TargetType="StackLayout">
                                <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource BackgroundColorSecondaryDark}, Light={StaticResource BackgroundColorSecondaryLight}}" />
                                <Setter Property="Padding" Value="0,8" />
                                <Setter Property="Spacing" Value="0" />
                                <Setter Property="HorizontalOptions" Value="FillAndExpand" />
                            </Style>

                            <Style TargetType="Image">
                                <Setter Property="HeightRequest" Value="20" />
                                <Setter Property="VerticalOptions" Value="Center" />
                                <Setter Property="me:IconTintColorEffect.Color" Value="{AppThemeBinding Dark={StaticResource TextColorSecondaryDark}, Light={StaticResource TextColorSecondaryLight}}" />
                            </Style>
                        </FlexLayout.Resources>
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <StackLayout me:TouchEffect.Color="{StaticResource TranslucidBlack2}" 
                                             x:DataType="m:TabMenuModel"
                                             BackgroundColor="Transparent"
                                             Padding="8"
                                             me:CornerRadiusEffect.CornerRadius="8">
                                    <Grid HeightRequest="20">
                                        <Image Source="{Binding Icon}">
                                            <Image.Triggers>
                                                <DataTrigger TargetType="Image" Binding="{Binding IsActive}" Value="true">
                                                    <Setter Property="me:IconTintColorEffect.Color" Value="{StaticResource Primary}" />
                                                </DataTrigger>
                                                <DataTrigger TargetType="Image" Binding="{Binding IsActive}" Value="false">
                                                    <Setter Property="me:IconTintColorEffect.Color" Value="{AppThemeBinding Dark={StaticResource TextColorSecondaryDark}, Light={StaticResource TextColorSecondaryLight}}" />
                                                </DataTrigger>
                                            </Image.Triggers>
                                        </Image>
                                    </Grid>
                                    <Label Text="{Binding Title}"
                                   TextColor="{DynamicResource AppPrimaryFontOrIconColor}" LineBreakMode="TailTruncation">
                                        <Label.Triggers>
                                            <DataTrigger TargetType="Label" Binding="{Binding IsActive}" Value="true">
                                                <Setter Property="TextColor" Value="{StaticResource Primary}" />
                                            </DataTrigger>
                                            <DataTrigger TargetType="Label" Binding="{Binding IsActive}" Value="false">
                                                <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource TextColorSecondaryDark}, Light={StaticResource TextColorSecondaryLight}}" />
                                            </DataTrigger>
                                        </Label.Triggers>
                                    </Label>
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding BindingContext.SwitchViewCommand, Source={x:Reference mainRoot}}" CommandParameter="{Binding .}"/>
                                    </StackLayout.GestureRecognizers>
                                </StackLayout>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </FlexLayout>
                </StackLayout>
            </StackLayout>
        </controls:PopupView>
        
        <!--<Button Text="Detail"
        Command="{Binding GoToDetailPageCommand}" 
        VerticalOptions="Center"/>-->
        <StackLayout Grid.Row="2"  HorizontalOptions="FillAndExpand" Spacing="0"
                     Orientation="Horizontal" Padding="0"
                     BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorSecondaryDark}, Light={StaticResource BackgroundColorSecondaryLight}}"
                     BindableLayout.ItemsSource="{Binding BottomActions}"
                     x:Name="bottomActionBar">
            <StackLayout.Resources>
                <Style TargetType="Label">
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="HorizontalOptions" Value="Center" />
                    <Setter Property="HorizontalTextAlignment" Value="Center" />
                    <Setter Property="VerticalOptions" Value="Center" />
                    <Setter Property="VerticalTextAlignment" Value="Center" />
                    <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource TextColorSecondaryDark}, Light={StaticResource TextColorSecondaryLight}}" />
                </Style>

                <Style TargetType="StackLayout">
                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Dark={StaticResource BackgroundColorSecondaryDark}, Light={StaticResource BackgroundColorSecondaryLight}}" />
                    <Setter Property="Padding" Value="0,10,0,8" />
                    <Setter Property="Spacing" Value="0" />
                    <Setter Property="HorizontalOptions" Value="FillAndExpand" />
                </Style>

                <Style TargetType="Image">
                    <Setter Property="HeightRequest" Value="20" />
                    <Setter Property="VerticalOptions" Value="Center" />
                    <Setter Property="me:IconTintColorEffect.Color" Value="{AppThemeBinding Dark={StaticResource TextColorSecondaryDark}, Light={StaticResource TextColorSecondaryLight}}" />
                </Style>
            </StackLayout.Resources>
            <BindableLayout.ItemTemplate>
                <DataTemplate x:DataType="m:TabMenuModel">
                    <StackLayout me:TouchEffect.Color="{StaticResource TranslucidBlack2}"
                                 me:Commands.Tap="{Binding Path=BindingContext.SwitchViewCommand, Source={x:Reference mainRoot}}"
                                 me:Commands.TapParameter="{Binding .}"
                                 me:CornerRadiusEffect.CornerRadius="6">
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding Path=BindingContext.SwitchViewCommand, Source={x:Reference mainRoot}}"
                                                  CommandParameter="{Binding .}" />
                        </StackLayout.GestureRecognizers>
                        <Grid HeightRequest="20">
                            <Image Source="{Binding Icon}">
                                <Image.Triggers>
                                    <DataTrigger TargetType="Image" Binding="{Binding IsActive}" Value="true">
                                        <Setter Property="me:IconTintColorEffect.Color" Value="{StaticResource Primary}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image" Binding="{Binding IsActive}" Value="false">
                                        <Setter Property="me:IconTintColorEffect.Color" Value="{AppThemeBinding Dark={StaticResource TextColorSecondaryDark}, Light={StaticResource TextColorSecondaryLight}}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image" Binding="{Binding Action}" Value="{x:Static common:BottomAction.More}">
                                        <Setter Property="HeightRequest"  Value="6" />
                                    </DataTrigger>
                                </Image.Triggers>
                            </Image>
                        </Grid>
                        <Label Text="{Binding Title}" >
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsActive}" Value="true">
                                    <Setter Property="TextColor" Value="{StaticResource Primary}" />
                                </DataTrigger>
                                <DataTrigger TargetType="Label" Binding="{Binding IsActive}" Value="false">
                                    <Setter Property="TextColor" Value="{AppThemeBinding Dark={StaticResource TextColorSecondaryDark}, Light={StaticResource TextColorSecondaryLight}}" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                    </StackLayout>
                </DataTemplate>
            </BindableLayout.ItemTemplate>
        </StackLayout>
        
        
    </Grid>
</local:BaseContentPage>
